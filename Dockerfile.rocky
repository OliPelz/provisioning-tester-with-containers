FROM eniocarboni/docker-rockylinux-systemd:9

# --- minimal user config (no network needed) ---
ARG MY_SSH_USER
ENV MY_SSH_USER=${MY_SSH_USER:-podmanuser}
RUN [ -z "$MY_SSH_USER" ] && (echo "ERROR: MY_SSH_USER is not set!" && exit 1) || echo "Using MY_SSH_USER=$MY_SSH_USER"

######### beginning of the free internet access ##############
ARG http_proxy=   ARG https_proxy=   ARG no_proxy=
ARG HTTP_PROXY=   ARG HTTPS_PROXY=   ARG NO_PROXY=
ENV http_proxy= \
    https_proxy= \
    HTTP_PROXY= \
    HTTPS_PROXY= \
    no_proxy= \
    NO_PROXY=
##############################################################

# Optional proxy env (used at runtime by wrappers)
COPY ./docker-proxy.env /usr/local/bin/proxy.env

# Proxy helpers & wrapper (no network)
COPY bash-provisioner/provisions/proxy_wrappers.sh /usr/local/bin/proxy_wrappers.sh
RUN chmod 644 /usr/local/bin/proxy_wrappers.sh
COPY bash-provisioner/provisions/package-mgr-v2 /usr/local/bin/package-mgr-v2
RUN chmod +x /usr/local/bin/package-mgr-v2

# First-boot provision bits (runtime)
COPY firstboot-provision-rocky.sh /usr/local/bin/firstboot-provision.sh
RUN chmod +x /usr/local/bin/firstboot-provision.sh
COPY firstboot-provision-rocky.service /etc/systemd/system/firstboot-provision.service

# Small config helper (offline)
COPY configure-rocky.sh /usr/local/bin/configure.sh
RUN chmod +x /usr/local/bin/configure.sh

# Minimal entrypoint (runtime)
COPY entrypoint-rocky.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# First-boot marker; “enable” service without systemctl at build time
RUN mkdir -p /var/lib/firstboot && touch /var/lib/firstboot/needed && \
    mkdir -p /etc/systemd/system/multi-user.target.wants && \
    ln -sf /etc/systemd/system/firstboot-provision.service \
           /etc/systemd/system/multi-user.target.wants/firstboot-provision.service

# Make sure user sessions are allowed at multi-user.target
# Note: this usually gets rid of :
# "System is booting up. Unprivileged users are not permitted to log in yet. Please come back later. For technical details, see pam_nologin(8)."
RUN mkdir -p /etc/systemd/system/multi-user.target.wants && \
    if [ -f /usr/lib/systemd/system/systemd-user-sessions.service ]; then \
        ln -sf /usr/lib/systemd/system/systemd-user-sessions.service \
               /etc/systemd/system/multi-user.target.wants/systemd-user-sessions.service ; \
    fi && \
    if [ -f /lib/systemd/system/systemd-user-sessions.service ]; then \
        ln -sf /lib/systemd/system/systemd-user-sessions.service \
               /etc/systemd/system/multi-user.target.wants/systemd-user-sessions.service ; \
    fi

# Optional: tests (no network)
RUN mkdir /tests
COPY test_mitmproxy_script.sh /tests
RUN chmod +x /tests/*

EXPOSE 22
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["/sbin/init"]
