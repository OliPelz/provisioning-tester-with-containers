FROM rockylinux:9

# Create a non-root user (default: podmanuser) and set up SSH
# Note: this can be overwritten by --build-arg MY_SSH_USER=xxx
#       and will only be set to its default (podmanuser)
#       if the build-arg is not defined
# Note2: ARG is a build-time parameter, only valid till build time
ARG MY_SSH_USER
# convert the build time var to a runtime-var so it can be seen
# by our entrypoints and CMDs!!!
ENV MY_SSH_USER=${MY_SSH_USER:-podmanuser}

RUN [ -z "$MY_SSH_USER" ] && (echo "ERROR: MY_SSH_USER is not set!" && exit 1) || echo "Using MY_SSH_USER=$MY_SSH_USER"

COPY keys_and_certs/thecompany_2023.crt /etc/pki/ca-trust/source/anchors/
COPY dnf.conf /etc/dnf/dnf.conf
ENV http_proxy="http://campus-proxy.rz.bankenit.de:8080"
ENV https_proxy="http://campus-proxy.rz.bankenit.de:8080"
ENV no_proxy=".fiducia.de,.bankenit.de,.fiduciagad.de,.gad.de,registry,.core,.dev,127.0.0.1,localhost"
ENV HTTP_PROXY="http://campus-proxy.rz.bankenit.de:8080"
ENV HTTPS_PROXY="http://campus-proxy.rz.bankenit.de:8080"
ENV NO_PROXY=".fiducia.de,.bankenit.de,.fiduciagad.de,.gad.de,registry,.core,.dev,127.0.0.1,localhost"

RUN update-ca-trust extract

# Install systemd, SSH, firewalld, cron, and common tools
RUN dnf -d 10 -y install \
    systemd \
    openssh-server \
    firewalld \
    cronie \
    python3 \
    bash \
    vim \
    iproute \
    net-tools \
    procps-ng \
    sudo \
    git \
    nmap-ncat \
    && dnf clean all

# Install BATS from GitHub
RUN git clone https://github.com/bats-core/bats-core.git /tmp/bats-core && \
    /tmp/bats-core/install.sh /usr/local \
    rm -rf /tmp/bats-core

# Enable services
RUN systemctl enable sshd && \
    systemctl enable firewalld && \
    systemctl enable crond

# Configure SSH to disable password login and enforce public key authentication
RUN sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config && \
    sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config && \
    sed -i 's/#AuthorizedKeysFile .ssh\/authorized_keys/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config

RUN useradd -m -s /bin/bash ${MY_SSH_USER} && \
    mkdir -p /home/${MY_SSH_USER}/.ssh && \
    chown ${MY_SSH_USER}:${MY_SSH_USER} /home/${MY_SSH_USER}/.ssh && \
    chmod 700 /home/${MY_SSH_USER}/.ssh && \
    echo "${MY_SSH_USER} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/${MY_SSH_USER}


# Add proxy variables, using ${HTTP_PROXY} and ${NO_PROXY}, to both the user's and root's .bashrc
# so we can access those vars via ssh login on runtime
RUN echo "export HTTP_PROXY=${HTTP_PROXY}" >> /home/${MY_SSH_USER}/.bashrc && \
    echo "export HTTPS_PROXY=${HTTP_PROXY}" >> /home/${MY_SSH_USER}/.bashrc && \
    echo "export http_proxy=${HTTP_PROXY}" >> /home/${MY_SSH_USER}/.bashrc && \
    echo "export https_proxy=${HTTP_PROXY}" >> /home/${MY_SSH_USER}/.bashrc && \
    echo "export NO_PROXY=${NO_PROXY}" >> /home/${MY_SSH_USER}/.bashrc && \
    echo "export no_proxy=${NO_PROXY}" >> /home/${MY_SSH_USER}/.bashrc && \
    echo "export HTTP_PROXY=${HTTP_PROXY}" >> /root/.bashrc && \
    echo "export HTTPS_PROXY=${HTTP_PROXY}" >> /root/.bashrc && \
    echo "export http_proxy=${HTTP_PROXY}" >> /root/.bashrc && \
    echo "export https_proxy=${HTTP_PROXY}" >> /root/.bashrc && \
    echo "export NO_PROXY=${NO_PROXY}" >> /root/.bashrc && \
    echo "export no_proxy=${NO_PROXY}" >> /root/.bashrc



# Copy configuration script and entrypoint script
COPY configure.sh /usr/local/bin/configure.sh
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/configure.sh /usr/local/bin/entrypoint.sh

# Expose SSH port
EXPOSE 22

# Set entrypoint to run configure.sh before systemd
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Set systemd as entrypoint
CMD ["/usr/lib/systemd/systemd"]
